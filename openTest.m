clc; clear all; close all;
import casadi.*

% np = 3;
% T = MX.sym('T',np,1);
% TSum = 0;
% for i = 1 : np
%     TSum = TSum + T(i);
% end
% a = [1,5,1,5]';
% 
% g = {};
% g = {g{:}, T};
% g = {g{:}, T};
% g = {g{:}, T};
% g = {g{:}, a};
% g{:}
% vertcat(g{:})


% ith = SX.sym('ith');
% 
% N = [30;30;30];
% cumuN = [30;60;90];
% 
% 
% F = Function('F', {T}, {T > 0})
% F([0.1;0.1;0.1])
% abs(sum(T))
% 
R1 = MX.sym('R1',3,3);
R2 = MX.sym('R2',3,3);
R1*R2
R3 = SX.sym('R3',3,3);
R4 = SX.sym('R4',3,3);
R3*R4
E = trace(R4)

% 
% theta = acos((R.trace()-1)/2 );
% skw = (R-transpose(R))/2/sin(theta);
% w = skw.inv_skew(); % is a unit vector
% skew(w*theta)

v1 = MX.sym('v1',3,1);
v2 = MX.sym('v2',3,1);
cross(v1, v2)
v1.cross(v2)
v1.*0.5

v3 = SX.sym('v3',3,1);
v4 = SX.sym('v4',3,1);
c = SX.sym('c');
sg = v3.*c
cross(v3, v4)
A = v3.cross(v4)
B = v3.*0.5
C = sum(v3)
D = transpose(v4)

% isvec(v,3)
% skew(v)